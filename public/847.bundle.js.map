{"version":3,"sources":["webpack://series-app/./src/components/Series/Serie.js","webpack://series-app/./src/components/Series/SeriesList.js","webpack://series-app/./src/components/Series/SearchSeries.js","webpack://series-app/./src/components/Series/Provider.js","webpack://series-app/./src/components/Series/index.js"],"names":["useStyles","makeStyles","root","maxWidth","name","id","poster_path","classes","vote_average","Grid","item","xs","sm","className","to","Card","CardActionArea","src","alt","title","series","Fragment","Message","container","spacing","justify","map","key","TextFieldSearch","styled","TextField","borderRadius","color","border","IconButtonSearch","IconButton","width","height","validateTerm","label","margin","variant","onKeyPress","e","onClick","Search","ButtonProvider","Button","fontSize","background","Provider","provider","getSeriesNetwork","active","provider_id","provider_name","useContext","SeriesContext","doneFetch","query","doneFetchProvider","length","Loader"],"mappings":"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","file":"847.bundle.js","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 300,\n    },\n  });\n\nconst Serie = ({ name, id, poster_path, vote_average }) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={6} sm={3}>\n    <Link className=\"buttonPrimary\" to={`/serie/${id}`}>\n    <Card className={classes.root}>\n      <CardActionArea>\n    <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={name} className=\"image-serie\"/>\n\n      </CardActionArea>\n    </Card>\n      </Link>\n    </Grid>\n  );\n};\n\nexport default Serie;\n","import React, { Fragment } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Serie from \"./Serie\";\nimport Message from \"../Common/Message\";\n\nconst SeriesList = ({ title, series}) => (\n  <Fragment>\n   \n    <div className=\"container-list\">\n    <Message title={title} />\n      <Grid container spacing={3} justify=\"center\">\n        {series.map((series) => {\n          const { id, name, poster_path, vote_average } = series;\n          return (\n            <Serie\n             key={id}\n              id={id}\n              name={name}\n              poster_path={poster_path}\n              vote_average={vote_average}\n            />\n          );\n        })}\n      </Grid>\n    </div>\n  </Fragment>\n);\n\nexport default SeriesList;\n","import React from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { styled } from '@material-ui/core';\nconst TextFieldSearch = styled(TextField)({\n    borderRadius: \"20px\",\n    color: \"#ffffff\",\n    border: \"2px solid #ffffff\",\n    \n \n   });\n   const IconButtonSearch = styled(IconButton)({\n    color: \"#ffffff\",\n    width: \"40px\",\n    height:\"40px\"\n   \n    \n \n   });\nconst SearchSeries = ({validateTerm}) =>  (\n    <div className=\"search-box\">\n    \n    <TextFieldSearch\n      id=\"terms\"\n      label=\"Buscar serie...\"\n      margin=\"normal\"\n      variant=\"outlined\"\n      onKeyPress={(e) => validateTerm(e)}\n    />\n    <IconButtonSearch onClick={(e) => \n        validateTerm(e) \n        \n        }>\n      <SearchIcon />\n    </IconButtonSearch>\n  </div>\n    )\n\n\nexport default SearchSeries\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core';\n\nconst ButtonProvider = styled(Button)({\n   borderRadius: \"20px\",\n   color: \"#ffffff\",\n   border: \"2px solid #ffffff\",\n   margin: \"4px\",\n   fontSize: \"12px\",\n   \"&.active\": {\n    background:'#f7ca0f',\n  }\n\n  });\n\nexport const Provider = ({provider, getSeriesNetwork, active}) => {\n\n\n  return (\n    <div className='provider'>\n        {\n    provider.map((provider) => {\n        const {provider_id, provider_name} = provider\n        return (\n          <ButtonProvider\n          onClick={() => getSeriesNetwork(provider_id) }\n          key={provider_id}\n          id={provider_id}\n          className={`${active === provider_id ? \"active\" : \"\"}`}\n        \n          >\n{provider_name}\n</ButtonProvider>\n        );\n      })}\n    </div>\n  )\n}\n","import React, {useContext} from 'react';\nimport Message from '../Common/Message';\nimport { SeriesContext } from '../../context/SeriesContext';\nimport SeriesList from './SeriesList';\nimport SearchSeries from './SearchSeries';\nimport { Provider } from './Provider';\nimport { Loader } from '../Common/Loader';\n\n\nconst Series = () => {\n    const { doneFetch, title, series, query, provider, doneFetchProvider, validateTerm, getSeriesNetwork, active} = useContext(SeriesContext)\n    return (\n    <>\n    <div className='search-bar-content'>\n    {\n      doneFetchProvider ? provider.length ? <Provider provider={provider} getSeriesNetwork={getSeriesNetwork} active={active} /> : \"\": <Loader/>\n    }\n\n    \n    <SearchSeries validateTerm={validateTerm}/>\n    </div>\n   \n    {doneFetch ? (series.length ? (<SeriesList title={title} series={series} query={query}/>) : (<Message title={title} query={query} />)) : <Loader/>}\n      \n    </>\n    )\n}\n\nexport default Series\n"],"sourceRoot":""}