{"version":3,"sources":["webpack://series-app/./src/components/Series/Provider.js","webpack://series-app/./src/components/Series/SearchSeries.js","webpack://series-app/./src/components/Series/Serie.js","webpack://series-app/./src/components/Series/SeriesList.js","webpack://series-app/./src/components/Series/index.js"],"names":["ButtonProvider","styled","Button","borderRadius","color","border","margin","fontSize","background","Provider","provider","getSeriesNetwork","active","map","provider_id","provider_name","TextFieldSearch","TextField","IconButtonSearch","IconButton","width","height","SearchSeries","validateTerm","e","useStyles","makeStyles","root","maxWidth","Serie","name","id","poster_path","vote_average","classes","SeriesList","title","series","Series","useContext","SeriesContext","doneFetch","query","doneFetchProvider","length"],"mappings":"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","file":"src_components_Series_index_js.bundle.js","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core';\n\nconst ButtonProvider = styled(Button)({\n   borderRadius: \"20px\",\n   color: \"#ffffff\",\n   border: \"2px solid #ffffff\",\n   margin: \"4px\",\n   fontSize: \"12px\",\n   \"&.active\": {\n    background:'#f7ca0f',\n  }\n\n  });\n\nexport const Provider = ({provider, getSeriesNetwork, active}) => {\n\n\n  return (\n    <div className='provider'>\n        {\n    provider.map((provider) => {\n        const {provider_id, provider_name} = provider\n        return (\n          <ButtonProvider\n          onClick={() => getSeriesNetwork(provider_id) }\n          key={provider_id}\n          id={provider_id}\n          className={`${active === provider_id ? \"active\" : \"\"}`}\n        \n          >\n{provider_name}\n</ButtonProvider>\n        );\n      })}\n    </div>\n  )\n}\n","import React from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { styled } from '@material-ui/core';\nconst TextFieldSearch = styled(TextField)({\n    borderRadius: \"20px\",\n    color: \"#ffffff\",\n    border: \"2px solid #ffffff\",\n    \n \n   });\n   const IconButtonSearch = styled(IconButton)({\n    color: \"#ffffff\",\n    width: \"40px\",\n    height:\"40px\"\n   \n    \n \n   });\nconst SearchSeries = ({validateTerm}) =>  (\n    <div className=\"search-box\">\n    \n    <TextFieldSearch\n      id=\"terms\"\n      label=\"Buscar serie...\"\n      margin=\"normal\"\n      variant=\"outlined\"\n      onKeyPress={(e) => validateTerm(e)}\n    />\n    <IconButtonSearch onClick={(e) => \n        validateTerm(e) \n        \n        }>\n      <SearchIcon />\n    </IconButtonSearch>\n  </div>\n    )\n\n\nexport default SearchSeries\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { Link } from 'react-router-dom';\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 300,\n    },\n  });\n\nconst Serie = ({ name, id, poster_path, vote_average }) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={6} sm={3}>\n    <Link className=\"buttonPrimary\" to={`/serie/${id}`}>\n    <Card className={classes.root}>\n      <CardActionArea>\n    <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={name} className=\"image-serie\"/>\n\n      </CardActionArea>\n    </Card>\n      </Link>\n    </Grid>\n  );\n};\n\nexport default Serie;\n","import React, { Fragment } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Serie from \"./Serie\";\nimport Message from \"../Common/Message\";\n\nconst SeriesList = ({ title, series}) => (\n  <Fragment>\n   \n    <div className=\"container-list\">\n    <Message title={title} />\n      <Grid container spacing={3} justify=\"center\">\n        {series.map((series) => {\n          const { id, name, poster_path, vote_average } = series;\n          return (\n            <Serie\n             key={id}\n              id={id}\n              name={name}\n              poster_path={poster_path}\n              vote_average={vote_average}\n            />\n          );\n        })}\n      </Grid>\n    </div>\n  </Fragment>\n);\n\nexport default SeriesList;\n","import React, {useContext} from 'react';\nimport Message from '../Common/Message';\nimport { SeriesContext } from '../../context/SeriesContext';\nimport SeriesList from './SeriesList';\nimport SearchSeries from './SearchSeries';\nimport { Provider } from './Provider';\nimport { Loader } from '../Common/Loader';\n\n\nconst Series = () => {\n    const { doneFetch, title, series, query, provider, doneFetchProvider, validateTerm, getSeriesNetwork, active} = useContext(SeriesContext)\n    return (\n    <>\n    <div className='search-bar-content'>\n    {\n      doneFetchProvider ? provider.length ? <Provider provider={provider} getSeriesNetwork={getSeriesNetwork} active={active} /> : \"\": <Loader/>\n    }\n\n    \n    <SearchSeries validateTerm={validateTerm}/>\n    </div>\n   \n    {doneFetch ? (series.length ? (<SeriesList title={title} series={series} query={query}/>) : (<Message title={title} query={query} />)) : <Loader/>}\n      \n    </>\n    )\n}\n\nexport default Series\n"],"sourceRoot":""}